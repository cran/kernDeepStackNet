useDynLib(kernDeepStackNet, .registration=TRUE)
export(calcTrA, calcTrAFast, calcWdiag, cancorRed, crossprodRcpp, devStandard, EImod, fineTuneCvKDSN, fitEnsembleKDSN, fitKDSN, fourierTransPredict, gDerivMu, getEigenValuesRcpp, lossApprox, lossCvKDSN, lossGCV, lossSharedCvKDSN, lossSharedTestKDSN, mbo1d, mboAll, optimize1dMulti, predict.KDSN, predict.KDSNensemble, predLogProb, randomFourierTrans, rdcPart, rdcSubset, rdcVarOrder, rdcVarSelSubset, robustStandard, tuneMboLevelCvKDSN, tuneMboLevelGcvKDSN, tuneMboSharedCvKDSN, tuneMboSharedSubsetKDSN, varMu)
importFrom(methods, formalArgs, functionBody)
importFrom(stats, coef, dist, dnorm, mad, median, optimize, pnorm, predict, quantile, runif, sd, na.omit, rnorm, var, cancor)
import(Rcpp)
importFrom(glmnet, glmnet)
importFrom(mvtnorm, rmvnorm)
importFrom(lhs, maximinLHS)
importFrom(DiceOptim, EQI, EI)
importFrom(DiceKriging, km, leaveOneOut.km)
importFrom(parallel, makeCluster, clusterEvalQ, clusterExport, parSapply, parSapplyLB, parLapply, parLapplyLB, stopCluster)
importFrom(caret, createFolds, createDataPartition)
importFrom(globalOptTests, goTest, getGlobalOpt)
importFrom(GenSA, GenSA)
importFrom(GA, ga)
importFrom(matrixStats, colRanks, colSds)
S3method(predict, KDSN)
S3method(predict, KDSNensemble)
S3method(predict, KDSNensembleDisk)
